<policies>
	<inbound>
		<set-variable name="SigningKey" value="bXloaWdobHlzdXBlcnNlY3JldGtleXdoaWNoY2FudGJlZGVjcmlwdGVk" />
		<validate-jwt header-name="Token" failed-validation-httpcode="401" failed-validation-error-message="Unauthorized">
			<issuer-signing-keys>
				<key>@(context.Variables.GetValueOrDefault<string>("SigningKey"))</key>
			</issuer-signing-keys>
			<required-claims>
				<claim name="role">
					<value>authorizedUser</value>
				</claim>
			</required-claims>
		</validate-jwt>
		<choose>
			<when condition="@(context.Request.Headers.GetValueOrDefault("Accept","").Contains("application/xml"))">
				<set-header name="Accept" exists-action="delete">
				</set-header>
				<set-variable name="ToXml" value="True" />
			</when>
			<otherwise>
				<set-variable name="ToXml" value="False" />
			</otherwise>
		</choose>
		<base />
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<base />
		<choose>
			<when condition="@((string)context.Variables["ToXml"] == "True")">
				<json-to-xml apply="always" consider-accept-header="false" />
			</when>
		</choose>
	</outbound>
</policies>